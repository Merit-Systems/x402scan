name: Publish Facilitators Package

on:
  push:
    branches: [main]
    paths:
      - 'packages/facilitators/package.json'

jobs:
  check-version-change:
    name: Check Version Change
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check-version.outputs.changed }}
      current-version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get current version
        id: get-version
        run: |
          VERSION=$(node -p "require('./packages/facilitators/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Get previous version
        id: get-prev-version
        run: |
          git checkout HEAD~1 -- packages/facilitators/package.json 2>/dev/null || echo "No previous version"
          PREV_VERSION=$(node -p "require('./packages/facilitators/package.json').version" 2>/dev/null || echo "none")
          echo "prev-version=$PREV_VERSION" >> $GITHUB_OUTPUT
          echo "Previous version: $PREV_VERSION"
          git checkout HEAD -- packages/facilitators/package.json

      - name: Check if version changed
        id: check-version
        run: |
          CURRENT="${{ steps.get-version.outputs.version }}"
          PREVIOUS="${{ steps.get-prev-version.outputs.prev-version }}"

          if [ "$CURRENT" != "$PREVIOUS" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Version changed from $PREVIOUS to $CURRENT"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Version unchanged: $CURRENT"
          fi

  publish:
    name: Build and Publish
    needs: check-version-change
    if: needs.check-version-change.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        working-directory: packages/facilitators
        run: pnpm install --frozen-lockfile

      - name: Run type check
        working-directory: packages/facilitators
        run: pnpm check:types

      - name: Build package
        working-directory: packages/facilitators
        run: pnpm build

      - name: Publish to npm
        working-directory: packages/facilitators
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: packages/facilitators-v${{ needs.check-version-change.outputs.current-version }}
          release_name: Facilitators v${{ needs.check-version-change.outputs.current-version }}
          body: |
            ## Facilitators Package v${{ needs.check-version-change.outputs.current-version }}

            Published to npm: https://www.npmjs.com/package/facilitators

            ### Installation
            ```bash
            npm install facilitators@${{ needs.check-version-change.outputs.current-version }}
            ```

            ### Changes
            See commit history for details.
          draft: false
          prerelease: false
